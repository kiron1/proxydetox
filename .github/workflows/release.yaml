on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset
jobs:
  mkrelease:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  buildpkg:
    name: Upload Release Asset
    runs-on: macos-latest
    needs: mkrelease
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build (pkg)
        id: buildpkg
        run: ./tools/mkpkg.sh
      - name: Upload Release Asset (pkg)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.mkrelease.outputs.upload_url }}
          asset_path: ./${{ steps.buildpkg.outputs.pkgfile }}
          asset_name: ${{ steps.buildpkg.outputs.pkgfile }}
          asset_content_type: application/octet-stream

  builddeb:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: mkrelease
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: x86_64-unknown-linux-musl
      - name: Run cargo build
        run: cargo build --release --target x86_64-unknown-linux-musl
      - name: Build (deb)
        id: buildpkg
        run: ./tools/mkdeb.sh ./target/x86_64-unknown-linux-musl/release/proxydetox
      - name: Upload Release Asset (deb)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.mkrelease.outputs.upload_url }}
          asset_path: ./${{ steps.buildpkg.outputs.debfile }}
          asset_name: ${{ steps.buildpkg.outputs.debfile }}
          asset_content_type: application/octet-stream
      - name: Upload Release Asset (bin)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.mkrelease.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-musl/release/proxydetox
          asset_name: proxydetox-${{ steps.buildpkg.outputs.version }}-x86_64-linux
          asset_content_type: application/octet-stream
