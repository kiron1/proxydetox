# GitHub Workflows file

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build: [linux, macos]
        include:
          - build: linux
            os: ubuntu-18.04
            rust: stable
            target: x86_64-unknown-linux-musl
            features: default
          - build: macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            features: gssapi

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Linux dependency
        run: sudo apt-get install llvm-10 clang-10 musl musl-tools musl-dev
        if: ${{ matrix.build == 'linux' }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true
          target: ${{ matrix.target }}
      - name: Run cargo test
        run: cargo test --target ${{ matrix.target }} --features ${{ matrix.features }}  --all


  format_check:
    name: Check format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - name: fmt
        run: cargo fmt --all -- --check
