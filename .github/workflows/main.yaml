# GitHub Workflows file

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  RUSTFLAGS: -Dwarnings

jobs:
  build_and_test:
    name: Build and test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            features: default
            mkcmd: ./tools/mkdeb.sh
          - build: macos
            os: macos-latest
            features: gssapi
            mkcmd: ./tools/mkpkg.sh
          - build: windows
            os: windows-latest
            features: sspi
            mkcmd: ./tools/mkzip.ps1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: Install Linux dependency
        run: sudo apt-get install llvm-10 clang-10 musl musl-tools musl-dev
        if: ${{ matrix.build == 'linux' }}
      #  see https://github.com/rust-lang/rust-bindgen/issues/1797
      - name: Install Windows dependency (LLVM)
        uses: KyleMayes/install-llvm-action@v1.4.1
        if: ${{ matrix.build == 'windows' }}
        with:
          version: "11.0"
          directory: ${{ runner.temp }}/llvm
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
        if: ${{ matrix.build == 'windows' }}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Run cargo test
        run: cargo test --features ${{ matrix.features }}
      - name: Build Release Package
        id: buildpkg
        run: ${{ matrix.mkcmd }}

  format_check:
    name: Check format
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true
      - name: fmt
        run: cargo fmt --all -- --check
